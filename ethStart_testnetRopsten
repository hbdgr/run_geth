#!/usr/bin/env bash

set -o errexit
set -o nounset

#---------------------------------------------------------------------

readonly TEST_NETWORK=1

readonly RPC_ENABLE=0
# RPC options
readonly rpcPort="8882"
readonly rpcCorsDomain="localhost"

# Inter process communication is enabled as default
readonly IPC_DISABLE=0
readonly IPCFILE_PATH="/home/m_eth/ipc/geth.ipc"

readonly CONSOLE_MODE=0



readonly HOME_DIR="/home/m_eth"
readonly GETH_DIR="${HOME_DIR}/eth_wallets/go-ethereum"
readonly LOGS_DIR="${HOME_DIR}/geth_logs/log00.dat"

# 0=silenct, 1=error, 2=warn, 3=info, 4=core, 5=debug, 6=debug detail
readonly VERBOSITY=4

#---------------------------------------------------------------------

declare -a geth_options=("")


# append verbosity level	
geth_options=("${geth_options[@]}" "--verbosity ${VERBOSITY}")

if [[ ${IPC_DISABLE} == 0 ]]
then
	# default admin,debug,eth,miner,net,personal,shh,txpool,web3
	ipcAPI="admin,debug,eth,miner,net,web3"
	geth_options=("${geth_options[@]}"	\
		"--ipcpath ${IPCFILE_PATH}"	\
		"--ipcapi ${ipcAPI}"		\
	)
else
	# append --ipcdisable option to array	
	geth_options=(${geth_options[@]}	\
		"--ipcdisable"			\
	)

fi

if [[ ${RPC_ENABLE} == 1 ]]
then
	# RPC additional options
	rpcAPI="web3,db,net,eth"

	# append rpc options
	geth_options=("${geth_options[@]}"		\
		"--rpc"					\
		"--rpcport=${rpcPort}"			\
		"--rpccorsdomain=${rpcCorsDomain}"	\
		"--rpcapi=${rpcAPI}"			\
		)
fi

if [[ ${TEST_NETWORK} == 1 ]]
then
	networkID=3 	# Ropsten testnet

	# append testnet options
	geth_options=("${geth_options[@]}"		\
		"--testnet" 				\
		"--networkid=$networkID" 		\
		)


fi

#---------------------------------------------------------------------

echo "Geth options summary: ${geth_options[@]}"

"${GETH_DIR}/build/bin/geth" "${geth_options[@]}" 2>>${LOGS_DIR} &
GETH_PROC_ID=$!
echo "process id: $GETH_PROC_ID"


# setting permission for ipc file
if [[ ${IPC_DISABLE} == 0 ]]
then
	# wait 2 seconds for geth.ipc to be created
	sleep 5

	# add file to ipc-eth group
	chown :ipc-eth "${IPCFILE_PATH}"

	# add ipc-eth group write permission 
	chmod g+w "${IPCFILE_PATH}"
fi


# Re-attach geth console
if [[ ${CONSOLE_MODE} == 1 ]]
then
	if [[ ${IPC_DISABLE} == 0 ]]
	then
		"${GETH_DIR}/build/bin/geth" "attach" "ipc:/${IPCFILE_PATH}"
	else
		"${GETH_DIR}/build/bin/geth" "attach" "http://localhost:${rpcPort}"
	fi
fi


while :
do
	echo ""
	read -n1 -r -p "Press 'q' to kill geth and exit..." key

	if [ "$key" = 'q' ]; then
		# kill geth instance
		kill -9 "$GETH_PROC_ID" >/dev/null 2>&1;
		printf "\nBackground geth processes have exited.\n"
		break
	fi
done
